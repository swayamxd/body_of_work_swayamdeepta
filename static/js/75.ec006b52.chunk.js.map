{"version":3,"file":"static/js/75.ec006b52.chunk.js","mappings":"2JAeA,IAAIA,GAAsB,EACnB,MAAMC,EAAwBA,IAAMD,EAC9BE,EAAoBC,IAC7BC,iBAAiB,YAAaC,IACtBA,EAAMC,YACNN,EAAqBK,EAAME,UAC3BJ,EAAGE,GACP,IACD,EAAK,C,uDCRZ,MASaG,EAAeA,CAACC,EAAUC,EAAQC,EAAYC,KACvD,IAAIC,EACAC,EACJ,OAAQC,IACAL,EAAOM,OAAS,IACZD,GAAeH,KACfE,EAAQJ,EAAOM,OAASH,GAAa,IAKjCC,QAAuBG,IAAdJ,KACTA,EAAYH,EAAOM,MACnBN,EAAOI,MAAQA,EACfJ,EAAOQ,OAvBTC,EAACH,EAAOL,IAClBK,EAAQL,EAAW,GACZ,OAEPK,EAAQL,EAAW,GACZ,oBAEJ,OAgByBQ,CAAUT,EAAOM,MAAOL,GACxCF,EAASC,IAGrB,CACH,C,qEC3BE,MAAMU,EAAqBA,KAC9B,MAAMC,GAAWC,EAAAA,EAAAA,KACjB,OAAQD,GAAYA,EAASE,iBAAoB,CAAC,C,uDCH/C,MAAMD,EAAqBA,KAC9B,MAAME,EAAkBC,KAAKC,aACzBA,YAAYC,kBACZD,YAAYC,iBAAiB,cAAc,GAQ/C,GAAIH,GACAA,EAAgBI,cAAgB,GAChCJ,EAAgBI,cAAgBF,YAAYG,MAC5C,OAAOL,CACX,C,6FCXG,MAAMM,EAAaA,CAACC,EAAMf,KAC7B,MAAMK,GAAWC,EAAAA,EAAAA,KACjB,IAAIU,EAAiB,YACjB/B,EAAAA,EAAAA,MAA2B,EAC3B+B,EAAiB,qBAEZX,IACDY,SAASC,eAAgBd,EAAAA,EAAAA,KAAuB,EAChDY,EAAiB,YAEZC,SAASE,aACdH,EAAiB,UAEZX,EAASe,OACdJ,EAAiBX,EAASe,KAAKC,QAAQ,KAAM,OAKrD,MAAO,CACHN,OACAf,MAAwB,qBAAVA,GAAyB,EAAIA,EAC3CE,OAAQ,OACRJ,MAAO,EACPwB,QANY,GAOZC,GCvBG,MAAMC,KAAKX,SAASY,KAAKC,MAAsB,cAAhBD,KAAKE,UAAyB,ODwBhEX,iBACH,C,sDE/BE,MAAMY,EAAiBnC,IACtBwB,SAASC,aACT9B,iBAAiB,sBAAsB,IAAMK,MAAY,GAGzDA,GACJ,C,sKCCG,MAAMoC,EAAiB,CAAC,IAAK,MAK9BC,EAAarC,IACXwB,SAASC,cACTU,EAAAA,EAAAA,IAAc,IAAME,EAAUrC,KAED,aAAxBwB,SAASc,WACd3C,iBAAiB,QAAQ,IAAM0C,EAAUrC,KAAW,GAIpDuC,WAAWvC,EAAU,EACzB,EAiBSwC,EAASA,CAACC,EAAUC,KAE7BA,EAAOA,GAAQ,CAAC,EAChB,IAAIzC,GAASoB,EAAAA,EAAAA,GAAW,QACpBsB,GAAS5C,EAAAA,EAAAA,GAAa0C,EAAUxC,EAAQmC,EAAgBM,EAAKvC,kBACjEkC,GAAU,KACN,MAAMtB,GAAkBF,EAAAA,EAAAA,KACpBE,IAKAd,EAAOM,MAAQyB,KAAKY,IAAI7B,EAAgBI,eAAgBR,EAAAA,EAAAA,KAAsB,GAC9EV,EAAO4B,QAAU,CAACd,GAClB4B,GAAO,IAGPlD,EAAAA,EAAAA,IAAiB,KACbQ,GAASoB,EAAAA,EAAAA,GAAW,OAAQ,GAC5BsB,GAAS5C,EAAAA,EAAAA,GAAa0C,EAAUxC,EAAQmC,EAAgBM,EAAKvC,kBAC7DwC,GAAO,EAAK,IAEpB,GACF,C","sources":["../node_modules/web-vitals/dist/modules/lib/bfcache.js","../node_modules/web-vitals/dist/modules/lib/bindReporter.js","../node_modules/web-vitals/dist/modules/lib/getActivationStart.js","../node_modules/web-vitals/dist/modules/lib/getNavigationEntry.js","../node_modules/web-vitals/dist/modules/lib/initMetric.js","../node_modules/web-vitals/dist/modules/lib/generateUniqueID.js","../node_modules/web-vitals/dist/modules/lib/whenActivated.js","../node_modules/web-vitals/dist/modules/onTTFB.js"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet bfcacheRestoreTime = -1;\nexport const getBFCacheRestoreTime = () => bfcacheRestoreTime;\nexport const onBFCacheRestore = (cb) => {\n    addEventListener('pageshow', (event) => {\n        if (event.persisted) {\n            bfcacheRestoreTime = event.timeStamp;\n            cb(event);\n        }\n    }, true);\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst getRating = (value, thresholds) => {\n    if (value > thresholds[1]) {\n        return 'poor';\n    }\n    if (value > thresholds[0]) {\n        return 'needs-improvement';\n    }\n    return 'good';\n};\nexport const bindReporter = (callback, metric, thresholds, reportAllChanges) => {\n    let prevValue;\n    let delta;\n    return (forceReport) => {\n        if (metric.value >= 0) {\n            if (forceReport || reportAllChanges) {\n                delta = metric.value - (prevValue || 0);\n                // Report the metric if there's a non-zero delta or if no previous\n                // value exists (which can happen in the case of the document becoming\n                // hidden when the metric value is 0).\n                // See: https://github.com/GoogleChrome/web-vitals/issues/14\n                if (delta || prevValue === undefined) {\n                    prevValue = metric.value;\n                    metric.delta = delta;\n                    metric.rating = getRating(metric.value, thresholds);\n                    callback(metric);\n                }\n            }\n        }\n    };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNavigationEntry } from './getNavigationEntry.js';\nexport const getActivationStart = () => {\n    const navEntry = getNavigationEntry();\n    return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNavigationEntry = () => {\n    const navigationEntry = self.performance &&\n        performance.getEntriesByType &&\n        performance.getEntriesByType('navigation')[0];\n    // Check to ensure the `responseStart` property is present and valid.\n    // In some cases no value is reported by the browser (for\n    // privacy/security reasons), and in other cases (bugs) the value is\n    // negative or is larger than the current page time. Ignore these cases:\n    // https://github.com/GoogleChrome/web-vitals/issues/137\n    // https://github.com/GoogleChrome/web-vitals/issues/162\n    // https://github.com/GoogleChrome/web-vitals/issues/275\n    if (navigationEntry &&\n        navigationEntry.responseStart > 0 &&\n        navigationEntry.responseStart < performance.now()) {\n        return navigationEntry;\n    }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getBFCacheRestoreTime } from './bfcache.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\nexport const initMetric = (name, value) => {\n    const navEntry = getNavigationEntry();\n    let navigationType = 'navigate';\n    if (getBFCacheRestoreTime() >= 0) {\n        navigationType = 'back-forward-cache';\n    }\n    else if (navEntry) {\n        if (document.prerendering || getActivationStart() > 0) {\n            navigationType = 'prerender';\n        }\n        else if (document.wasDiscarded) {\n            navigationType = 'restore';\n        }\n        else if (navEntry.type) {\n            navigationType = navEntry.type.replace(/_/g, '-');\n        }\n    }\n    // Use `entries` type specific for the metric.\n    const entries = [];\n    return {\n        name,\n        value: typeof value === 'undefined' ? -1 : value,\n        rating: 'good', // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n        delta: 0,\n        entries,\n        id: generateUniqueID(),\n        navigationType,\n    };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = () => {\n    return `v4-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const whenActivated = (callback) => {\n    if (document.prerendering) {\n        addEventListener('prerenderingchange', () => callback(), true);\n    }\n    else {\n        callback();\n    }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { onBFCacheRestore } from './lib/bfcache.js';\nimport { getNavigationEntry } from './lib/getNavigationEntry.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { whenActivated } from './lib/whenActivated.js';\n/** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\nexport const TTFBThresholds = [800, 1800];\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback) => {\n    if (document.prerendering) {\n        whenActivated(() => whenReady(callback));\n    }\n    else if (document.readyState !== 'complete') {\n        addEventListener('load', () => whenReady(callback), true);\n    }\n    else {\n        // Queue a task so the callback runs after `loadEventEnd`.\n        setTimeout(callback, 0);\n    }\n};\n/**\n * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nexport const onTTFB = (onReport, opts) => {\n    // Set defaults\n    opts = opts || {};\n    let metric = initMetric('TTFB');\n    let report = bindReporter(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n    whenReady(() => {\n        const navigationEntry = getNavigationEntry();\n        if (navigationEntry) {\n            // The activationStart reference is used because TTFB should be\n            // relative to page activation rather than navigation start if the\n            // page was prerendered. But in cases where `activationStart` occurs\n            // after the first byte is received, this time should be clamped at 0.\n            metric.value = Math.max(navigationEntry.responseStart - getActivationStart(), 0);\n            metric.entries = [navigationEntry];\n            report(true);\n            // Only report TTFB after bfcache restores if a `navigation` entry\n            // was reported for the initial load.\n            onBFCacheRestore(() => {\n                metric = initMetric('TTFB', 0);\n                report = bindReporter(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n                report(true);\n            });\n        }\n    });\n};\n"],"names":["bfcacheRestoreTime","getBFCacheRestoreTime","onBFCacheRestore","cb","addEventListener","event","persisted","timeStamp","bindReporter","callback","metric","thresholds","reportAllChanges","prevValue","delta","forceReport","value","undefined","rating","getRating","getActivationStart","navEntry","getNavigationEntry","activationStart","navigationEntry","self","performance","getEntriesByType","responseStart","now","initMetric","name","navigationType","document","prerendering","wasDiscarded","type","replace","entries","id","Date","Math","floor","random","whenActivated","TTFBThresholds","whenReady","readyState","setTimeout","onTTFB","onReport","opts","report","max"],"sourceRoot":""}