{"version":3,"file":"static/js/183.3a021d9e.chunk.js","mappings":"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","sources":["../node_modules/web-vitals/dist/modules/lib/bfcache.js","../node_modules/web-vitals/dist/modules/lib/bindReporter.js","../node_modules/web-vitals/dist/modules/lib/getActivationStart.js","../node_modules/web-vitals/dist/modules/lib/getNavigationEntry.js","../node_modules/web-vitals/dist/modules/lib/getVisibilityWatcher.js","../node_modules/web-vitals/dist/modules/lib/initMetric.js","../node_modules/web-vitals/dist/modules/lib/generateUniqueID.js","../node_modules/web-vitals/dist/modules/lib/observe.js","../node_modules/web-vitals/dist/modules/lib/onHidden.js","../node_modules/web-vitals/dist/modules/lib/runOnce.js","../node_modules/web-vitals/dist/modules/lib/whenActivated.js","../node_modules/web-vitals/dist/modules/lib/polyfills/firstInputPolyfill.js","../node_modules/web-vitals/dist/modules/onFID.js"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet bfcacheRestoreTime = -1;\nexport const getBFCacheRestoreTime = () => bfcacheRestoreTime;\nexport const onBFCacheRestore = (cb) => {\n    addEventListener('pageshow', (event) => {\n        if (event.persisted) {\n            bfcacheRestoreTime = event.timeStamp;\n            cb(event);\n        }\n    }, true);\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst getRating = (value, thresholds) => {\n    if (value > thresholds[1]) {\n        return 'poor';\n    }\n    if (value > thresholds[0]) {\n        return 'needs-improvement';\n    }\n    return 'good';\n};\nexport const bindReporter = (callback, metric, thresholds, reportAllChanges) => {\n    let prevValue;\n    let delta;\n    return (forceReport) => {\n        if (metric.value >= 0) {\n            if (forceReport || reportAllChanges) {\n                delta = metric.value - (prevValue || 0);\n                // Report the metric if there's a non-zero delta or if no previous\n                // value exists (which can happen in the case of the document becoming\n                // hidden when the metric value is 0).\n                // See: https://github.com/GoogleChrome/web-vitals/issues/14\n                if (delta || prevValue === undefined) {\n                    prevValue = metric.value;\n                    metric.delta = delta;\n                    metric.rating = getRating(metric.value, thresholds);\n                    callback(metric);\n                }\n            }\n        }\n    };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNavigationEntry } from './getNavigationEntry.js';\nexport const getActivationStart = () => {\n    const navEntry = getNavigationEntry();\n    return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNavigationEntry = () => {\n    const navigationEntry = self.performance &&\n        performance.getEntriesByType &&\n        performance.getEntriesByType('navigation')[0];\n    // Check to ensure the `responseStart` property is present and valid.\n    // In some cases no value is reported by the browser (for\n    // privacy/security reasons), and in other cases (bugs) the value is\n    // negative or is larger than the current page time. Ignore these cases:\n    // https://github.com/GoogleChrome/web-vitals/issues/137\n    // https://github.com/GoogleChrome/web-vitals/issues/162\n    // https://github.com/GoogleChrome/web-vitals/issues/275\n    if (navigationEntry &&\n        navigationEntry.responseStart > 0 &&\n        navigationEntry.responseStart < performance.now()) {\n        return navigationEntry;\n    }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { onBFCacheRestore } from './bfcache.js';\nlet firstHiddenTime = -1;\nconst initHiddenTime = () => {\n    // If the document is hidden when this code runs, assume it was always\n    // hidden and the page was loaded in the background, with the one exception\n    // that visibility state is always 'hidden' during prerendering, so we have\n    // to ignore that case until prerendering finishes (see: `prerenderingchange`\n    // event logic below).\n    return document.visibilityState === 'hidden' && !document.prerendering\n        ? 0\n        : Infinity;\n};\nconst onVisibilityUpdate = (event) => {\n    // If the document is 'hidden' and no previous hidden timestamp has been\n    // set, update it based on the current event data.\n    if (document.visibilityState === 'hidden' && firstHiddenTime > -1) {\n        // If the event is a 'visibilitychange' event, it means the page was\n        // visible prior to this change, so the event timestamp is the first\n        // hidden time.\n        // However, if the event is not a 'visibilitychange' event, then it must\n        // be a 'prerenderingchange' event, and the fact that the document is\n        // still 'hidden' from the above check means the tab was activated\n        // in a background state and so has always been hidden.\n        firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n        // Remove all listeners now that a `firstHiddenTime` value has been set.\n        removeChangeListeners();\n    }\n};\nconst addChangeListeners = () => {\n    addEventListener('visibilitychange', onVisibilityUpdate, true);\n    // IMPORTANT: when a page is prerendering, its `visibilityState` is\n    // 'hidden', so in order to account for cases where this module checks for\n    // visibility during prerendering, an additional check after prerendering\n    // completes is also required.\n    addEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\nconst removeChangeListeners = () => {\n    removeEventListener('visibilitychange', onVisibilityUpdate, true);\n    removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\nexport const getVisibilityWatcher = () => {\n    if (firstHiddenTime < 0) {\n        // If the document is hidden when this code runs, assume it was hidden\n        // since navigation start. This isn't a perfect heuristic, but it's the\n        // best we can do until an API is available to support querying past\n        // visibilityState.\n        firstHiddenTime = initHiddenTime();\n        addChangeListeners();\n        // Reset the time on bfcache restores.\n        onBFCacheRestore(() => {\n            // Schedule a task in order to track the `visibilityState` once it's\n            // had an opportunity to change to visible in all browsers.\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=1133363\n            setTimeout(() => {\n                firstHiddenTime = initHiddenTime();\n                addChangeListeners();\n            }, 0);\n        });\n    }\n    return {\n        get firstHiddenTime() {\n            return firstHiddenTime;\n        },\n    };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getBFCacheRestoreTime } from './bfcache.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\nexport const initMetric = (name, value) => {\n    const navEntry = getNavigationEntry();\n    let navigationType = 'navigate';\n    if (getBFCacheRestoreTime() >= 0) {\n        navigationType = 'back-forward-cache';\n    }\n    else if (navEntry) {\n        if (document.prerendering || getActivationStart() > 0) {\n            navigationType = 'prerender';\n        }\n        else if (document.wasDiscarded) {\n            navigationType = 'restore';\n        }\n        else if (navEntry.type) {\n            navigationType = navEntry.type.replace(/_/g, '-');\n        }\n    }\n    // Use `entries` type specific for the metric.\n    const entries = [];\n    return {\n        name,\n        value: typeof value === 'undefined' ? -1 : value,\n        rating: 'good', // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n        delta: 0,\n        entries,\n        id: generateUniqueID(),\n        navigationType,\n    };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = () => {\n    return `v4-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = (type, callback, opts) => {\n    try {\n        if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n            const po = new PerformanceObserver((list) => {\n                // Delay by a microtask to workaround a bug in Safari where the\n                // callback is invoked immediately, rather than in a separate task.\n                // See: https://github.com/GoogleChrome/web-vitals/issues/277\n                Promise.resolve().then(() => {\n                    callback(list.getEntries());\n                });\n            });\n            po.observe(Object.assign({\n                type,\n                buffered: true,\n            }, opts || {}));\n            return po;\n        }\n    }\n    catch (e) {\n        // Do nothing.\n    }\n    return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const onHidden = (cb) => {\n    document.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'hidden') {\n            cb();\n        }\n    });\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const runOnce = (cb) => {\n    let called = false;\n    return () => {\n        if (!called) {\n            cb();\n            called = true;\n        }\n    };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const whenActivated = (callback) => {\n    if (document.prerendering) {\n        addEventListener('prerenderingchange', () => callback(), true);\n    }\n    else {\n        callback();\n    }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet firstInputEvent;\nlet firstInputDelay;\nlet firstInputTimeStamp;\nlet callbacks;\nconst listenerOpts = { passive: true, capture: true };\nconst startTimeStamp = new Date();\n/**\n * Accepts a callback to be invoked once the first input delay and event\n * are known.\n */\nexport const firstInputPolyfill = (onFirstInput) => {\n    callbacks.push(onFirstInput);\n    reportFirstInputDelayIfRecordedAndValid();\n};\nexport const resetFirstInputPolyfill = () => {\n    callbacks = [];\n    firstInputDelay = -1;\n    firstInputEvent = null;\n    eachEventType(addEventListener);\n};\n/**\n * Records the first input delay and event, so subsequent events can be\n * ignored. All added event listeners are then removed.\n */\nconst recordFirstInputDelay = (delay, event) => {\n    if (!firstInputEvent) {\n        firstInputEvent = event;\n        firstInputDelay = delay;\n        firstInputTimeStamp = new Date();\n        eachEventType(removeEventListener);\n        reportFirstInputDelayIfRecordedAndValid();\n    }\n};\n/**\n * Reports the first input delay and event (if they're recorded and valid)\n * by running the array of callback functions.\n */\nconst reportFirstInputDelayIfRecordedAndValid = () => {\n    // In some cases the recorded delay is clearly wrong, e.g. it's negative\n    // or it's larger than the delta between now and initialization.\n    // - https://github.com/GoogleChromeLabs/first-input-delay/issues/4\n    // - https://github.com/GoogleChromeLabs/first-input-delay/issues/6\n    // - https://github.com/GoogleChromeLabs/first-input-delay/issues/7\n    if (firstInputDelay >= 0 &&\n        // @ts-ignore (subtracting two dates always returns a number)\n        firstInputDelay < firstInputTimeStamp - startTimeStamp) {\n        const entry = {\n            entryType: 'first-input',\n            name: firstInputEvent.type,\n            target: firstInputEvent.target,\n            cancelable: firstInputEvent.cancelable,\n            startTime: firstInputEvent.timeStamp,\n            processingStart: firstInputEvent.timeStamp + firstInputDelay,\n        };\n        callbacks.forEach(function (callback) {\n            callback(entry);\n        });\n        callbacks = [];\n    }\n};\n/**\n * Handles pointer down events, which are a special case.\n * Pointer events can trigger main or compositor thread behavior.\n * We differentiate these cases based on whether or not we see a\n * 'pointercancel' event, which are fired when we scroll. If we're scrolling\n * we don't need to report input delay since FID excludes scrolling and\n * pinch/zooming.\n */\nconst onPointerDown = (delay, event) => {\n    /**\n     * Responds to 'pointerup' events and records a delay. If a pointer up event\n     * is the next event after a pointerdown event, then it's not a scroll or\n     * a pinch/zoom.\n     */\n    const onPointerUp = () => {\n        recordFirstInputDelay(delay, event);\n        removePointerEventListeners();\n    };\n    /**\n     * Responds to 'pointercancel' events and removes pointer listeners.\n     * If a 'pointercancel' is the next event to fire after a pointerdown event,\n     * it means this is a scroll or pinch/zoom interaction.\n     */\n    const onPointerCancel = () => {\n        removePointerEventListeners();\n    };\n    /**\n     * Removes added pointer event listeners.\n     */\n    const removePointerEventListeners = () => {\n        removeEventListener('pointerup', onPointerUp, listenerOpts);\n        removeEventListener('pointercancel', onPointerCancel, listenerOpts);\n    };\n    addEventListener('pointerup', onPointerUp, listenerOpts);\n    addEventListener('pointercancel', onPointerCancel, listenerOpts);\n};\n/**\n * Handles all input events and records the time between when the event\n * was received by the operating system and when it's JavaScript listeners\n * were able to run.\n */\nconst onInput = (event) => {\n    // Only count cancelable events, which should trigger behavior\n    // important to the user.\n    if (event.cancelable) {\n        // In some browsers `event.timeStamp` returns a `DOMTimeStamp` value\n        // (epoch time) instead of the newer `DOMHighResTimeStamp`\n        // (document-origin time). To check for that we assume any timestamp\n        // greater than 1 trillion is a `DOMTimeStamp`, and compare it using\n        // the `Date` object rather than `performance.now()`.\n        // - https://github.com/GoogleChromeLabs/first-input-delay/issues/4\n        const isEpochTime = event.timeStamp > 1e12;\n        const now = isEpochTime ? new Date() : performance.now();\n        // Input delay is the delta between when the system received the event\n        // (e.g. event.timeStamp) and when it could run the callback (e.g. `now`).\n        const delay = now - event.timeStamp;\n        if (event.type == 'pointerdown') {\n            onPointerDown(delay, event);\n        }\n        else {\n            recordFirstInputDelay(delay, event);\n        }\n    }\n};\n/**\n * Invokes the passed callback const for =  each event type with t =>he\n * `onInput` const and =  `listenerOpts =>`.\n */\nconst eachEventType = (callback) => {\n    const eventTypes = ['mousedown', 'keydown', 'touchstart', 'pointerdown'];\n    eventTypes.forEach((type) => callback(type, onInput, listenerOpts));\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { onBFCacheRestore } from './lib/bfcache.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { firstInputPolyfill, resetFirstInputPolyfill, } from './lib/polyfills/firstInputPolyfill.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nexport const FIDThresholds = [100, 300];\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport, opts) => {\n    // Set defaults\n    opts = opts || {};\n    whenActivated(() => {\n        const visibilityWatcher = getVisibilityWatcher();\n        let metric = initMetric('FID');\n        let report;\n        const handleEntry = (entry) => {\n            // Only report if the page wasn't hidden prior to the first input.\n            if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n                metric.value = entry.processingStart - entry.startTime;\n                metric.entries.push(entry);\n                report(true);\n            }\n        };\n        const handleEntries = (entries) => {\n            entries.forEach(handleEntry);\n        };\n        const po = observe('first-input', handleEntries);\n        report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n        if (po) {\n            onHidden(runOnce(() => {\n                handleEntries(po.takeRecords());\n                po.disconnect();\n            }));\n            onBFCacheRestore(() => {\n                metric = initMetric('FID');\n                report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n                // Browsers don't re-emit FID on bfcache restore so fake it until you make it\n                resetFirstInputPolyfill();\n                firstInputPolyfill(handleEntry);\n            });\n        }\n    });\n};\n"],"names":["bfcacheRestoreTime","getBFCacheRestoreTime","onBFCacheRestore","cb","addEventListener","event","persisted","timeStamp","bindReporter","callback","metric","thresholds","reportAllChanges","prevValue","delta","forceReport","value","undefined","rating","getRating","getActivationStart","navEntry","getNavigationEntry","activationStart","navigationEntry","self","performance","getEntriesByType","responseStart","now","firstHiddenTime","initHiddenTime","document","visibilityState","prerendering","Infinity","onVisibilityUpdate","type","removeChangeListeners","addChangeListeners","removeEventListener","getVisibilityWatcher","setTimeout","initMetric","name","navigationType","wasDiscarded","replace","entries","id","Date","Math","floor","random","observe","opts","PerformanceObserver","supportedEntryTypes","includes","po","list","Promise","resolve","then","getEntries","Object","assign","buffered","e","onHidden","runOnce","called","whenActivated","firstInputEvent","firstInputDelay","firstInputTimeStamp","callbacks","listenerOpts","passive","capture","startTimeStamp","recordFirstInputDelay","delay","eachEventType","reportFirstInputDelayIfRecordedAndValid","entry","entryType","target","cancelable","startTime","processingStart","forEach","onInput","onPointerDown","onPointerUp","removePointerEventListeners","onPointerCancel","FIDThresholds","onFID","onReport","visibilityWatcher","report","handleEntry","push","handleEntries","takeRecords","disconnect","onFirstInput"],"sourceRoot":""}